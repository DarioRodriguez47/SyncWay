services:
  # Servicio de Usuarios
  users-service:
    build:
      context: ./services/users
      dockerfile: Dockerfile
    image: syncwave-users-service:latest
    container_name: syncwave-users-service
    env_file:
      - ./services/users/.env
    environment:
      - NODE_ENV=production
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - PORT=5000
    ports:
      - "5000:5000"
    networks:
      - syncwave-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # Servicio de MÃºsica
  music-service:
    build:
      context: ./services/musics
      dockerfile: Dockerfile
    image: syncwave-music-service:latest
    container_name: syncwave-music-service
    env_file:
      - ./services/musics/.env
    environment:
      - NODE_ENV=production
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - PORT=5001
    ports:
      - "5001:5001"
    networks:
      - syncwave-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # API Gateway
  api-gateway:
    image: nginx:alpine
    container_name: syncwave-api-gateway
    ports:
      - "8080:8080"
    volumes:
      - ./api-gateway/api-gateway.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - users-service
      - music-service
    networks:
      - syncwave-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  # Frontend Angular
  frontend:
    build:
      context: ./fronted
      dockerfile: Dockerfile
    container_name: syncwave-frontend
    environment:
      - NODE_ENV=production
      - API_GATEWAY_URL=http://syncwave-api-gateway:8080
    ports:
      - "4200:4200"
    depends_on:
      - api-gateway
    networks:
      - syncwave-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: syncwave-nginx
    ports:
      - "8090:80"
      - "8443:443"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf
      - ./gateway/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - api-gateway
    networks:
      - syncwave-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/lb-health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped

networks:
  syncwave-network:
    driver: bridge