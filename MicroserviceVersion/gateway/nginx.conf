events {
    worker_connections 1024;
}

http {
    # Resolver DNS dinámico para Docker
    resolver 127.0.0.11 valid=10s;
    resolver_timeout 5s;

    # Logging básico
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # ✅ SOLO Frontend Load Balancer
    upstream frontend_cluster {
        # Aquí puedes agregar múltiples instancias del frontend
        server syncwave-frontend:4200 max_fails=3 fail_timeout=30s;
        # server syncwave-frontend-2:4200; # Para escalabilidad futura
        # server syncwave-frontend-3:4200;
        
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost;

        # ✅ TODO el tráfico va al frontend (SPA)
        location / {
            proxy_pass http://frontend_cluster;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Headers estándar
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support (para Angular dev server)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts razonables
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # ✅ Cache para assets estáticos
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend_cluster;
            proxy_set_header Host $host;
            
            # Cache agresivo para assets
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Health check del load balancer
        location = /lb-health {
            access_log off;
            return 200 'Frontend Load Balancer OK\n';
            add_header Content-Type text/plain;
        }
    }
}