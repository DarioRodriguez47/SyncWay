events {
    worker_connections 1024;
}

http {
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log debug;

    # Upstream services
    upstream users_service {
        server syncwave-users-service:5000;
        keepalive 32;
    }
    
    upstream music_service {
        server syncwave-music-service:5001;
        keepalive 32;
    }
    
    server {
        listen 8080;
        server_name localhost;
        
        # Buffer settings for better performance
        client_body_buffer_size 16K;
        client_header_buffer_size 1k;
        client_max_body_size 8m;
        large_client_header_buffers 2 1k;
        
        # CORS headers para todas las rutas
        add_header Access-Control-Allow-Origin "http://localhost:8090" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Accept" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight OPTIONS requests
        location / {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:8090" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Accept" always;
                add_header Access-Control-Allow-Credentials "true" always;
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }
        
        # Health check
        location = /health {
            access_log off;
            return 200 '{"status":"ok","service":"nginx-api-gateway","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json always;
        }
        
        # ✅ Auth endpoints - Directo a users service manteniendo /api/auth
        location /api/auth/ {
            # Remove trailing slash issues
            rewrite ^/api/auth/(.*) /api/auth/$1 break;
            
            proxy_pass http://users_service;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Headers importantes
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type $http_content_type;
            proxy_set_header Accept $http_accept;
            
            # Timeouts optimizados
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Log para debugging
            access_log /var/log/nginx/auth.log main;
        }
        
        # ✅ Users endpoints
        location /api/users/ {
            rewrite ^/api/users/(.*) /api/users/$1 break;
            
            proxy_pass http://users_service;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type $http_content_type;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            access_log /var/log/nginx/users.log main;
        }
        
        # ✅ Music endpoints
        location /api/musics/ {
            rewrite ^/api/musics/(.*) /api/musics/$1 break;
            
            proxy_pass http://music_service;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type $http_content_type;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            access_log /var/log/nginx/music.log main;
        }
        
        # Root endpoint
        location = / {
            return 200 '{"message":"SyncWave Nginx API Gateway","version":"1.0.0","endpoints":["/api/auth/*","/api/users/*","/api/musics/*","/health"]}';
            add_header Content-Type application/json always;
        }
        
        # 404 handler
        location ~ ^/((?!api|health).)*$ {
            return 404 '{"error":"Endpoint not found","path":"$uri"}';
            add_header Content-Type application/json always;
        }
        
        # Error pages
        error_page 500 502 503 504 /50x.json;
        location = /50x.json {
            return 500 '{"error":"Internal server error","status":$status}';
            add_header Content-Type application/json always;
        }
    }
}