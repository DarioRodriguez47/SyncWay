events {
    worker_connections 1024;
}

http {
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" rt=$request_time';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log info;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Upstream services
    upstream frontend_backend {
        server syncwave-frontend:4200;
        keepalive 32;
    }
    
    upstream gateway_backend {
        server syncwave-api-gateway:8080;
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # ✅ API Routes - Con mejor configuración
        location /api/ {
            # CORS headers específicos para APIs
            add_header Access-Control-Allow-Origin "http://localhost:8090" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;
            
            # Handle OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:8090";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
                add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            
            proxy_pass http://gateway_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Headers importantes
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type $http_content_type;
            
            # Timeouts para APIs
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # ✅ Frontend Routes - Mejorado para SPA
        location / {
            # Try files first, then fallback to index for SPA routing
            try_files $uri $uri/ @frontend;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                proxy_pass http://frontend_backend;
                proxy_set_header Host $host;
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
        }
        
        # Fallback for SPA routing
        location @frontend {
            proxy_pass http://frontend_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support (if needed)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Health Check del Load Balancer
        location = /lb-health {
            access_log off;
            return 200 'Load Balancer is healthy\n';
            add_header Content-Type text/plain;
        }
        
        # API Gateway Health Check (proxy)
        location = /api-health {
            proxy_pass http://gateway_backend/health;
            proxy_set_header Host $host;
            access_log off;
        }
        
        # Error pages
        error_page 502 503 504 /maintenance.html;
        location = /maintenance.html {
            return 503 '{"error":"Service temporarily unavailable","status":503}';
            add_header Content-Type application/json;
        }
    }
}